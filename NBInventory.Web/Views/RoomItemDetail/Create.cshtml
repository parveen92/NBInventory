@model NBInventory.DTO.RoomItemDetailDTO

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RoomItemDetailDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.Rooms_Item_Detail_ID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rooms_Item_Detail_ID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rooms_Item_Detail_ID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Room_NumberID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* @Html.EditorFor(model => model.Room_NumberID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Room_NumberID, new SelectList(ViewBag.Room as SelectList, "Value", "Value"), "Select Room", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Room_NumberID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StoreID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*  @Html.EditorFor(model => model.StoreID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.StoreID, new SelectList(ViewBag.Store as SelectList, "Value", "Text"),"Select Store", new { @class = "form-control" @*,onchange = "this.form.submit();"*@ })
                @Html.ValidationMessageFor(model => model.StoreID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
                @Html.LabelFor(model => model.ItemID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @*  @Html.EditorFor(model => model.ItemID, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.ItemID, new SelectList(ViewBag.StockItem as SelectList, "Value", "Text"),"Select Item", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemDate, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.ItemList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


<script type="text/javascript">
    $(function () {
        $("#model.StoreID").change(function () {
            var val = $(this).val();
            var subItems="";
            $.getJSON("@Url.Action("GetItemsbyStore","RoomDetailController")", {id:val} ,function (data) {
              $.each(data,function(index,item){
                subItems+="<option value='"+item.Value+"'>"+item.Text+"</option>"
              });
              $("#model.ItemID").html(subItems)
            });
        });
    });
</script>


}
